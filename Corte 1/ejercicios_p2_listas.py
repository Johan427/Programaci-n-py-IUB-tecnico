# -*- coding: utf-8 -*-
"""ejercicios-p2-listas.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BX8VHw7BXyYLpGKmIMIhi-YyfO2hDqdB
"""

"""
Ejercicio #1: Proponer una representación con tuplas para las cartas de una baraja.
"""

palos = ["co|crazones", "diamantes", "treboles", "picas"]
valores = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A']

for valor in valores:
    for palo in palos:
        print(f'{valor} de {palo}'.ljust(10),"\n", end='')
    print()

"""
Ejercicio #2: Escribir una función poker que reciba cinco cartas de la baraja e informe si esas cartas forman o no un poker (es decir que hay 4 cartas con el mismo número).

"""
from collections import Counter


valor_c=[]
#############################################################
for i in range(5):

  n= input(f"Ingrese numero de carta {i+1} :")
  s=input (f"Ingrese el signo de la carta {i+1} :")
  print("\n" ,"-----------------------------------------------", "\n")

  valor_c.append(n) #agregar a valor_c para guardadr numeros

#################################################################

count_c = Counter(valor_c)

if 4 in count_c.values():
  print("Es un poker")
else:
    print("No es un poker")

"""
Ejercicio#4 Escribir una función que reciba dos vectores y devuelva su producto escalar.
"""
v1=[]
v2=[]
n= int(input("Ingrese el tamaño de los vectores: "))
for i in range(n):
  dat1= int(input(f"Ingrese el dato {i+1} del primer vector: "))
  v1.append(dat1)



for i in range(n):
  dat2= int(input(f"Ingrese el dato {i+1} del segundo vector: "))
  v2.append(dat2)



def prod_esc(v1,v2):
  prod=0
  prod+=(v1[i]* v2[i])
  return prod

r=prod_esc(v1,v2)
print(f"El producto escalar de los vectores es: {r}")

#############################################################################################

"""
Ejercicio #5: Escribir una función que reciba dos vectores y devuelva si son o no ortogonales.
"""

if r == 0:
  print("Los vectores son ortogonales")
else:
  print("Los vectores no son ortogonales")

"""
 Ejecicio:7 Escribir una función que reciba un vector y devuelva su norma.
 """
import math
v1=[]
n= int(input("Ingrese el tamaño del vector: "))
for i in range(n):
  dat1= int(input(f"Ingrese el dato {i+1} del vector: "))
  v1.append(dat1)


def nor(v1):
  ra=0
  for valor in v1:
    ra+= valor**2
  r= math.sqrt(ra)
  return r

r= nor(v1)

print(f"La norma del vector es: {r}")

"""
Ejercico# 8: Dada una lista de números enteros y un entero k, escribir una función que:
• Devuelva tres listas, una con los menores, otra con los mayores y otra con los iguales a k.
• Devuelva una lista con aquellos que son múltiplos de k.
"""

may=[]
men=[]
ig=[]
mul=[]

lis = []

n = int(input("Ingrese la cantidad de números para el vector: "))
k = int(input("Ingrese el número entero k : "))

for i in range(n):
    dat = int(input(f"Ingrese el número {i + 1}: "))
    lis.append(dat)


def cla_num(lis, k): #clacificar numeros (lista)

  for dat in lis:
    if dat > k:
      may.append(dat)
    elif dat < k:
      men.append(dat)
    else:
      ig.append(dat)

      #multiplos
      if k!=0 and dat%k==0: #mediante el mod%
        mul.append(dat)

  return may,men,ig,mul
cla_num(lis, k)
print(f"numros mayores a {k}:,{may}")
print(f"numros menores a {k}:,{men}")
print(f"numros iguales a {k}:,{ig}")
print(f"numros multiplos de {k}:,{mul}")